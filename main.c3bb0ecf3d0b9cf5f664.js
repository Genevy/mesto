(()=>{"use strict";var t={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inputErrorClass:"form__input_type_error",inputErrorActive:"form__input-error_active"},e=document.querySelector(".popup_type_edit"),r=document.querySelector(".profile__edit-button"),n=e.querySelector(".form"),o=e.querySelector(".form__input_type_user-name"),i=e.querySelector(".form__input_type_about"),u=document.querySelector(".popup_type_avatar").querySelector(".form"),a=document.querySelector(".profile__avatar"),c=document.querySelector(".popup_type_card"),l=document.querySelector(".profile__add-button"),s=c.querySelector(".form");function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===f(o)?o:String(o)),n)}var o}var y=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._cardData=e,this._name=e.name,this._link=e.link,this._likes=e.likes,this._cardSelector=r,this._handleCardClick=n.onClick,this._handleCardLike=n.onLike,this._handleCardDelete=n.onDelete}var e,r;return e=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){var t=this;this._element=this._getTemplate();var e=this._element.querySelector(".card__photo");e.src=this._link,e.alt=this._name,this._cardPhoto=e;var r=this._element.querySelector(".card__title");return r.textContent=this._name,this._cardPhoto.onerror=function(){t._cardPhoto.src="https://raw.githubusercontent.com/genevy/mesto/main/src/images/placeholder.svg",t._cardPhoto.alt="".concat(t._name," - картинка не загружена"),r.textContent="Не загружена"},this._buttonLike=this._element.querySelector(".card__button-like"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._likeCounter.textContent=this._likes.length,this._buttonTrash=this._element.querySelector(".card__recycle-bin"),this._isOwnerCard()||this._buttonTrash.remove(),this.toogleButtonLike(),this._setEventListeners(),this._element}},{key:"_isOwnerCard",value:function(){return this._cardData.currentUser._id===this._cardData.owner._id}},{key:"isLike",value:function(){var t=this;return this._cardData.likes.some((function(e){return e._id===t._cardData.currentUser._id}))}},{key:"toogleButtonLike",value:function(){this.isLike()?this._buttonLike.classList.add("card__button-like_active"):this._buttonLike.classList.remove("card__button-like_active")}},{key:"_handleLike",value:function(){var t=this;this._handleCardLike(this._cardData,(function(e){t._cardData.likes=e,t.toogleButtonLike(),t._likeCounter.textContent=t._cardData.likes.length}))}},{key:"_deleteCard",value:function(){this._element.remove(),this._element=null,this._cardPhoto=null,this._buttonLike=null,this._buttonTrash=null}},{key:"_setEventListeners",value:function(){var t=this;this._cardPhoto.addEventListener("click",(function(){t._handleCardClick(t._name,t._link)})),this._buttonLike.addEventListener("click",(function(){t._handleLike()})),this._buttonTrash.addEventListener("click",(function(){t._handleCardDelete(t._cardData,(function(){t._deleteCard()}))}))}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function v(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==h(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==h(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===h(o)?o:String(o)),n)}var o}var d=function(){function t(e,r){var n=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=n,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"renderItems",value:function(t){var e=this;t.reverse().forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&v(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function _(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===m(o)?o:String(o)),n)}var o}var b=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._overlayClose=this._overlayClose.bind(this)}var e,r;return e=t,(r=[{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"_overlayClose",value:function(t){t.target==t.currentTarget&&this.close()}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popup.addEventListener("mousedown",this._overlayClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("mousedown",this._overlayClose)}},{key:"setEventListeners",value:function(){var t=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){t.close()}))}}])&&_(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function g(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==S(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===S(o)?o:String(o)),n)}var o}function w(t,e){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},w(t,e)}function k(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=O(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},E.apply(this,arguments)}function O(t){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},O(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&w(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=O(n);if(o){var r=O(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===S(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return k(t)}(this,t)});function u(t){var e,r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._popupImage=r._popup.querySelector(".popup__image"),r._popupImageTitle=r._popup.querySelector(".popup__image-caption"),E((e=k(r),O(u.prototype)),"setEventListeners",e).call(e),r}return e=u,(r=[{key:"open",value:function(t,e){var r=this;this._popupImage.src=e,this._popupImage.alt=t,this._popupImageTitle.textContent=t,this._popupImage.onerror=function(){r._popupImage.src="https://raw.githubusercontent.com/genevy/mesto/main/src/images/placeholder.svg",r._popupImage.alt="".concat(t," - картинка не загружена"),r._popupImageTitle.textContent="".concat(t," - картинка не загружена")},E(O(u.prototype),"open",this).call(this)}}])&&g(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(b);function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function C(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==j(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==j(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===j(o)?o:String(o)),n)}var o}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=I(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},L.apply(this,arguments)}function R(t,e){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},R(t,e)}function I(t){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},I(t)}var T=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&R(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=I(n);if(o){var r=I(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===j(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._form=r._popup.querySelector(".form"),r._formInputList=r._form.querySelectorAll(".form__input"),r._handleFormSubmit=e,r._submitButton=r._form.querySelector(".form__save-button"),r}return e=u,(r=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._formInputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setEventListeners",value:function(){var t=this;L(I(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault();var r=t._submitButton.textContent;t._submitButton.textContent="Сохранение...",t._handleFormSubmit(t._getInputValues()).then((function(){return t.close()})).catch((function(t){return console.log("Error: ".concat(t))})).finally((function(){t._submitButton.textContent=r}))}))}},{key:"close",value:function(){this._form.reset(),L(I(u.prototype),"close",this).call(this)}}])&&C(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(b);function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function A(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===q(o)?o:String(o)),n)}var o}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=B(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},D.apply(this,arguments)}function x(t,e){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},x(t,e)}function B(t){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},B(t)}var U=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&x(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=B(n);if(o){var r=B(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._form=e._popup.querySelector(".form"),e._confirmStep=function(){},e}return e=u,(r=[{key:"setEventListeners",value:function(){var t=this;this._form.addEventListener("submit",(function(e){e.preventDefault(),t._confirmStep()})),D(B(u.prototype),"setEventListeners",this).call(this)}},{key:"setConfirmAction",value:function(t){this._confirmStep=t}}])&&A(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(b);function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function N(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==V(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==V(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===V(o)?o:String(o)),n)}var o}var J=function(){function t(e){var r=e.userNameSelector,n=e.userJobSelector,o=e.userAvatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameSelector=document.querySelector(r),this._userJobSelector=document.querySelector(n),this._userAvatarSelector=document.querySelector(o),this._data={}}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return this._data}},{key:"setUserInfo",value:function(t){this._data=t,this._userNameSelector.textContent=t.name,this._userJobSelector.textContent=t.about}},{key:"setUserAvatar",value:function(t){var e=this;this._data=t,this._userAvatarSelector.src=t.avatar,this._userAvatarSelector.onerror=function(){e._userAvatarSelector.src="https://raw.githubusercontent.com/genevy/mesto/main/src/images/avatar_placeholder.svg"}}}])&&N(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function H(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,M(n.key),n)}}function M(t){var e=function(t,e){if("object"!==F(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===F(e)?e:String(e)}var z=function(){function t(e,r){var n,o,i,u=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,i=function(){return u._inputList.some((function(t){return!t.validity.valid}))},(o=M(o="_hasInvalidInput"))in n?Object.defineProperty(n,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[o]=i,this._validationParameters=e,this._formElement=r,this._buttonElement=this._formElement.querySelector(this._validationParameters.submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._validationParameters.inputSelector))}var e,r;return e=t,(r=[{key:"_showInputError",value:function(t,e){var r=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._validationParameters.inputErrorClass),r.textContent=e,r.classList.add(this._validationParameters.inputErrorActive)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._validationParameters.inputErrorClass),e.classList.remove(this._validationParameters.inputErrorActive),e.textContent=""}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?this._buttonElement.setAttribute("disabled",!0):this._buttonElement.removeAttribute("disabled")}},{key:"clearValidation",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){t._hideInputError(e)}))}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))}))}}])&&H(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function $(t){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},$(t)}function G(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==$(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==$(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===$(o)?o:String(o)),n)}var o}var K=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._headers=e.headers}var e,r;return e=t,(r=[{key:"_handleReply",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(this._handleReply)}},{key:"getAllCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(this._handleReply)}},{key:"updateUserInfo",value:function(t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})}).then(this._handleReply)}},{key:"addNewCard",value:function(t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(t)}).then(this._handleReply)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._url,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._handleReply)}},{key:"setLike",value:function(t){return fetch("".concat(this._url,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this._headers}).then(this._handleReply)}},{key:"deleteLike",value:function(t){return fetch("".concat(this._url,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this._headers}).then(this._handleReply)}},{key:"updateUserAvatar",value:function(t){return fetch("".concat(this._url,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify(t)}).then(this._handleReply)}}])&&G(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function Q(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var W=new z(t,n);W.enableValidation();var X=new z(t,s);X.enableValidation();var Y=new z(t,u);Y.enableValidation();var Z=new J({userNameSelector:".profile__name",userJobSelector:".profile__about",userAvatarSelector:".profile__image"}),tt=new T(".popup_type_edit",(function(t){return it.updateUserInfo(t).then((function(t){Z.setUserInfo(t)})).catch((function(t){console.log("ERROR",t)}))})),et=new P(".popup_type_image"),rt=new T(".popup_type_card",(function(t){return it.addNewCard(t).then((function(t){at.addItem(ut(t))})).catch((function(t){console.log("ERROR",t)}))})),nt=new T(".popup_type_avatar",(function(t){return it.updateUserAvatar(t).then((function(t){Z.setUserAvatar(t)})).catch((function(t){console.log("ERROR",t)}))})),ot=new U(".popup_type_confirm"),it=new K({url:"https://mesto.nomoreparties.co/v1/cohort-61",headers:{"Content-Type":"application/json",authorization:"abeb6987-1131-4a8c-8e13-4ece746c8e7b"}});function ut(t){t.currentUser=Z.getUserInfo();var e=new y(t,"#card",{onClick:ct,onLike:function(t,r){e.isLike()?it.deleteLike(t._id).then((function(t){return r(t.likes)})).catch((function(t){console.log("ERROR",t)})):it.setLike(t._id).then((function(t){return r(t.likes)})).catch((function(t){console.log("ERROR",t)}))},onDelete:function(t,e){ot.open(),ot.setConfirmAction((function(){it.deleteCard(t._id).then((function(){ot.close(),e()})).catch((function(t){console.log("ERROR",t)}))}))}});return e.generateCard()}Promise.all([it.getUserInfo(),it.getAllCards()]).then((function(t){var e,r,n=(r=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,u,a=[],c=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(n=i.call(r)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,r)||function(t,e){if(t){if("string"==typeof t)return Q(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Q(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];Z.setUserInfo(o),Z.setUserAvatar(o),at.renderItems(i)})).catch((function(t){console.log(t)}));var at=new d({renderer:function(t){at.addItem(ut(t))}},".photo__list");function ct(t,e){et.open(t,e)}ot.setEventListeners(),tt.setEventListeners(),nt.setEventListeners(),rt.setEventListeners(),r.addEventListener("click",(function(){var t;W.toggleButtonState(),tt.open(),t=Z.getUserInfo(),o.value=t.name,i.value=t.about})),l.addEventListener("click",(function(){rt.open(),X.clearValidation()})),a.addEventListener("click",(function(){nt.open(),Y.clearValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,